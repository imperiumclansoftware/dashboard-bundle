{"version":3,"file":"gridstack-dd.js","sourceRoot":"","sources":["../src/gridstack-dd.ts"],"names":[],"mappings":"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","sourcesContent":["// gridstack-GridStackDD.get().ts 3.1.2 @preserve\r\n\r\n/**\r\n * https://gridstackjs.com/\r\n * (c) 2014-2020 Alain Dumesny, Dylan Weiss, Pavel Reznikov\r\n * gridstack.js may be freely distributed under the MIT license.\r\n*/\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n\r\nimport { GridStackDDI } from './gridstack-ddi';\r\nimport { GridItemHTMLElement, GridStackNode, GridStackElement, DDUIData, DDDragInOpt } from './types';\r\nimport { GridStack } from './gridstack';\r\nimport { Utils } from './utils';\r\n\r\n/** Drag&Drop drop options */\r\nexport type DDDropOpt = {\r\n  /** function or class type that this grid will accept as dropped items (see GridStackOptions.acceptWidgets) */\r\n  accept?: (el: GridItemHTMLElement) => boolean;\r\n}\r\n\r\n/** drag&drop options currently called from the main code, but others can be passed in grid options */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type DDOpts = 'enable' | 'disable' | 'destroy' | 'option' | string | any;\r\nexport type DDKey = 'minWidth' | 'minHeight' | 'maxWidth' | 'maxHeight';\r\nexport type DDValue = number | string;\r\n\r\n/** drag&drop events callbacks */\r\nexport type DDCallback = (event: Event, arg2: GridItemHTMLElement, helper?: GridItemHTMLElement) => void;\r\n\r\n/**\r\n * Base class implementing common Grid drag'n'drop functionality, with domain specific subclass (h5 vs jq subclasses)\r\n */\r\nexport abstract class GridStackDD extends GridStackDDI {\r\n\r\n  /** override to cast to correct type */\r\n  static get(): GridStackDD {\r\n    return GridStackDDI.get() as GridStackDD;\r\n  }\r\n\r\n  /** removes any drag&drop present (called during destroy) */\r\n  public remove(el: GridItemHTMLElement): GridStackDD {\r\n    this.draggable(el, 'destroy').resizable(el, 'destroy');\r\n    if (el.gridstackNode) {\r\n      delete el.gridstackNode._initDD; // reset our DD init flag\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // APIs that must be implemented by subclasses to do actual darg/drop/resize called by GridStack code below\r\n\r\n  public abstract resizable(el: GridItemHTMLElement, opts: DDOpts, key?: DDKey, value?: DDValue): GridStackDD;\r\n\r\n  public abstract isResizable(el: HTMLElement): boolean;\r\n\r\n  public abstract draggable(el: GridItemHTMLElement, opts: DDOpts, key?: DDKey, value?: DDValue): GridStackDD;\r\n\r\n  public abstract dragIn(el: GridStackElement, opts: DDDragInOpt): GridStackDD;\r\n\r\n  public abstract isDraggable(el: HTMLElement): boolean;\r\n\r\n  public abstract droppable(el: GridItemHTMLElement, opts: DDOpts | DDDropOpt, key?: DDKey, value?: DDValue): GridStackDD;\r\n\r\n  public abstract isDroppable(el: HTMLElement): boolean;\r\n\r\n  public abstract on(el: GridItemHTMLElement, eventName: string, callback: DDCallback): GridStackDD;\r\n\r\n  public abstract off(el: GridItemHTMLElement, eventName: string): GridStackDD;\r\n}\r\n\r\n/********************************************************************************\r\n * GridStack code that is doing drag&drop extracted here so main class is smaller\r\n * for static grid that don't do any of this work anyway. Saves about 10k.\r\n * TODO: no code hint in code below as this is <any> so look at alternatives ?\r\n * https://www.typescriptlang.org/docs/handbook/declaration-merging.html\r\n * https://www.typescriptlang.org/docs/handbook/mixins.html\r\n ********************************************************************************/\r\n\r\n/** @internal called to add drag over support to support widgets */\r\nGridStack.prototype._setupAcceptWidget = function(): GridStack {\r\n  if (this.opts.staticGrid || !this.opts.acceptWidgets) return this;\r\n\r\n  let onDrag = (event, el: GridItemHTMLElement) => {\r\n    let node = el.gridstackNode;\r\n    let pos = this.getCellFromPixel({left: event.pageX, top: event.pageY}, true);\r\n    let x = Math.max(0, pos.x);\r\n    let y = Math.max(0, pos.y);\r\n    if (!node._added) {\r\n      node.x = x;\r\n      node.y = y;\r\n      delete node.autoPosition;\r\n\r\n      // don't accept *initial* location if doesn't fit #1419 (locked drop region, or can't grow), but maybe try if it will go somewhere\r\n      if (!this.engine.willItFit(node)) {\r\n        node.autoPosition = true; // ignore x,y and try for any slot...\r\n        if (!this.engine.willItFit(node)) return; // full grid or can't grow\r\n      }\r\n      node._added = true;\r\n\r\n      node.el = el;\r\n      this.engine.cleanNodes();\r\n      this.engine.beginUpdate(node);\r\n      this.engine.addNode(node);\r\n\r\n      this._writeAttrs(this.placeholder, node.x, node.y, node.w, node.h);\r\n      this.el.appendChild(this.placeholder);\r\n      node.el = this.placeholder; // dom we update while dragging...\r\n      node._beforeDragX = node.x;\r\n      node._beforeDragY = node.y;\r\n\r\n      this._updateContainerHeight();\r\n    } else if ((x !== node.x || y !== node.y) && this.engine.canMoveNode(node, x, y)) {\r\n      this.engine.moveNode(node, x, y);\r\n      this._updateContainerHeight();\r\n    }\r\n  };\r\n\r\n  GridStackDD.get()\r\n    .droppable(this.el, {\r\n      accept: (el: GridItemHTMLElement) => {\r\n        let node: GridStackNode = el.gridstackNode;\r\n        if (node && node.grid === this) {\r\n          return true; // set accept drop to true on ourself (which we ignore) so we don't get \"can't drop\" icon in HTML5 mode while moving\r\n        }\r\n        if (typeof this.opts.acceptWidgets === 'function') {\r\n          return this.opts.acceptWidgets(el);\r\n        }\r\n        let selector = (this.opts.acceptWidgets === true ? '.grid-stack-item' : this.opts.acceptWidgets as string);\r\n        return el.matches(selector);\r\n      }\r\n    })\r\n    .on(this.el, 'dropover', (event, el: GridItemHTMLElement) => {\r\n      // ignore drop enter on ourself, and prevent parent from receiving event\r\n      let node = el.gridstackNode;\r\n      if (node && node.grid === this) {\r\n        delete node._added; // reset this to track placeholder again in case we were over other grid #1484 (dropout doesn't always clear)\r\n        return false;\r\n      }\r\n\r\n      // load any element attributes if we don't have a node\r\n      if (!node) {\r\n        node = this._readAttr(el);\r\n      }\r\n\r\n      // if the item came from another grid, let it know it was added here to removed duplicate shadow #393\r\n      if (node.grid && node.grid !== this) {\r\n        node._added = true;\r\n      }\r\n\r\n      // if not calculate the grid size based on element outer size\r\n      let w = node.w || Math.round(el.offsetWidth / this.cellWidth()) || 1;\r\n      let h = node.h || Math.round(el.offsetHeight / this.getCellHeight(true)) || 1;\r\n\r\n      // copy the node original values (min/max/id/etc...) but override width/height/other flags which are this grid specific\r\n      let newNode = this.engine.prepareNode({...node, ...{w, h, _added: false, _temporary: true}});\r\n      newNode._isOutOfGrid = true;\r\n      el.gridstackNode = newNode;\r\n      el._gridstackNodeOrig = node;\r\n\r\n      GridStackDD.get().on(el, 'drag', onDrag);\r\n      return false; // prevent parent from receiving msg (which may be grid as well)\r\n    })\r\n    .on(this.el, 'dropout', (event, el: GridItemHTMLElement) => {\r\n      let node = el.gridstackNode;\r\n      if (!node) { return; }\r\n\r\n      // clear any added flag now that we are leaving #1484\r\n      delete node._added;\r\n\r\n      // jquery-ui bug. Must verify widget is being dropped out\r\n      // check node variable that gets set when widget is out of grid\r\n      if (!node._isOutOfGrid) {\r\n        return;\r\n      }\r\n\r\n      GridStackDD.get().off(el, 'drag');\r\n      node.el = null;\r\n      this.engine.removeNode(node);\r\n      if (this.placeholder.parentNode === this.el) {\r\n        this.placeholder.remove();\r\n      }\r\n      this._updateContainerHeight();\r\n      el.gridstackNode = el._gridstackNodeOrig;\r\n      return false; // prevent parent from receiving msg (which may be grid as well)\r\n    })\r\n    .on(this.el, 'drop', (event, el: GridItemHTMLElement, helper: GridItemHTMLElement) => {\r\n      let node = el.gridstackNode;\r\n      let wasAdded = !!this.placeholder.parentElement; // skip items not actually added to us because of constrains, but do cleanup #1419\r\n      // ignore drop on ourself from ourself - dragend will handle the simple move instead\r\n      if (node && node.grid === this) { return false; }\r\n\r\n      this.placeholder.remove();\r\n\r\n      // notify previous grid of removal\r\n      let origNode = el._gridstackNodeOrig;\r\n      delete el._gridstackNodeOrig;\r\n      if (wasAdded && origNode && origNode.grid && origNode.grid !== this) {\r\n        let oGrid = origNode.grid;\r\n        oGrid.placeholder.remove();\r\n        origNode.el = el; // was using placeholder, have it point to node we've moved instead\r\n        oGrid.engine.removedNodes.push(origNode);\r\n        oGrid._triggerRemoveEvent();\r\n      }\r\n\r\n      if (!node) { return false; }\r\n\r\n      // use existing placeholder node as it's already in our list with drop location\r\n      if (wasAdded) {\r\n        const _id = node._id;\r\n        this.engine.cleanupNode(node); // removes all internal _xyz values (including the _id so add that back)\r\n        node._id = _id;\r\n        node.grid = this;\r\n      }\r\n      GridStackDD.get().off(el, 'drag');\r\n      // if we made a copy ('helper' which is temp) of the original node then insert a copy, else we move the original node (#1102)\r\n      // as the helper will be nuked by jqueryui otherwise\r\n      if (helper !== el) {\r\n        helper.remove();\r\n        el.gridstackNode = origNode; // original item (left behind) is re-stored to pre dragging as the node now has drop info\r\n        if (wasAdded) {\r\n          el = el.cloneNode(true) as GridItemHTMLElement;\r\n        }\r\n      } else {\r\n        el.remove(); // reduce flicker as we change depth here, and size further down\r\n        GridStackDD.get().remove(el);\r\n      }\r\n      if (!wasAdded) return false;\r\n      el.gridstackNode = node;\r\n      node.el = el;\r\n\r\n      Utils.removePositioningStyles(el);\r\n      this._writeAttr(el, node);\r\n      this.el.appendChild(el);\r\n      this._updateContainerHeight();\r\n      this.engine.addedNodes.push(node);\r\n      this._triggerAddEvent();\r\n      this._triggerChangeEvent();\r\n\r\n      this.engine.endUpdate();\r\n      if (this._gsEventHandler['dropped']) {\r\n        this._gsEventHandler['dropped']({type: 'dropped'}, origNode && origNode.grid ? origNode : undefined, node);\r\n      }\r\n\r\n      // wait till we return out of the drag callback to set the new drag&resize handler or they may get messed up\r\n      // IFF we are still there (some application will use as placeholder and insert their real widget instead)\r\n      window.setTimeout(() => {\r\n        if (node.el && node.el.parentElement) this._prepareDragDropByNode(node);\r\n      });\r\n\r\n      return false; // prevent parent from receiving msg (which may be grid as well)\r\n    });\r\n  return this;\r\n}\r\n\r\n/** @internal called to setup a trash drop zone if the user specifies it */\r\nGridStack.prototype._setupRemoveDrop = function(): GridStack {\r\n  if (!this.opts.staticGrid && typeof this.opts.removable === 'string') {\r\n    let trashEl = document.querySelector(this.opts.removable) as HTMLElement;\r\n    if (!trashEl) return this;\r\n    // only register ONE dropover/dropout callback for the 'trash', and it will\r\n    // update the passed in item and parent grid because the 'trash' is a shared resource anyway,\r\n    // and Native DD only has 1 event CB (having a list and technically a per grid removableOptions complicates things greatly)\r\n    if (!GridStackDD.get().isDroppable(trashEl)) {\r\n      GridStackDD.get().droppable(trashEl, this.opts.removableOptions)\r\n        .on(trashEl, 'dropover', function(event, el) { // don't use => notation to avoid using 'this' as grid by mistake...\r\n          let node = el.gridstackNode;\r\n          if (!node || !node.grid) return;\r\n          el.dataset.inTrashZone = 'true';\r\n          node.grid._setupRemovingTimeout(el);\r\n        })\r\n        .on(trashEl, 'dropout', function(event, el) { // same\r\n          let node = el.gridstackNode;\r\n          if (!node || !node.grid) return;\r\n          delete el.dataset.inTrashZone;\r\n          node.grid._clearRemovingTimeout(el);\r\n        });\r\n    }\r\n  }\r\n  return this;\r\n}\r\n\r\n/** @internal */\r\nGridStack.prototype._setupRemovingTimeout = function(el: GridItemHTMLElement): GridStack {\r\n  let node = el.gridstackNode;\r\n  if (!node || node._removeTimeout || !this.opts.removable) return this;\r\n  node._removeTimeout = window.setTimeout(() => {\r\n    el.classList.add('grid-stack-item-removing');\r\n    node._isAboutToRemove = true;\r\n  }, this.opts.removeTimeout);\r\n  return this;\r\n}\r\n\r\n/** @internal */\r\nGridStack.prototype._clearRemovingTimeout = function(el: GridItemHTMLElement): GridStack {\r\n  let node = el.gridstackNode;\r\n  if (!node || !node._removeTimeout) return this;\r\n  clearTimeout(node._removeTimeout);\r\n  delete node._removeTimeout;\r\n  el.classList.remove('grid-stack-item-removing');\r\n  delete node._isAboutToRemove;\r\n  return this;\r\n}\r\n\r\n/** @internal call to setup dragging in from the outside (say toolbar), with options */\r\nGridStack.prototype._setupDragIn = function():  GridStack {\r\n  if (!this.opts.staticGrid && typeof this.opts.dragIn === 'string') {\r\n    if (!GridStackDD.get().isDraggable(this.opts.dragIn)) {\r\n      GridStackDD.get().dragIn(this.opts.dragIn, this.opts.dragInOptions);\r\n    }\r\n  }\r\n  return this;\r\n}\r\n\r\n/** @internal prepares the element for drag&drop **/\r\nGridStack.prototype._prepareDragDropByNode = function(node: GridStackNode): GridStack {\r\n  let el = node.el;\r\n\r\n  // check for disabled grid first\r\n  if (this.opts.staticGrid || node.locked ||\r\n    ((node.noMove || this.opts.disableDrag) && (node.noResize || this.opts.disableResize))) {\r\n    if (node._initDD) {\r\n      GridStackDD.get().remove(node.el); // nukes everything instead of just disable, will add some styles back next\r\n      delete node._initDD;\r\n    }\r\n    node.el.classList.add('ui-draggable-disabled', 'ui-resizable-disabled'); // add styles one might depend on #1435\r\n    return this;\r\n  }\r\n  // check if init already done\r\n  if (node._initDD) {\r\n    // fine tune drag vs move by disabling any part...\r\n    if (node.noMove || this.opts.disableDrag) {\r\n      GridStackDD.get().draggable(el, 'disable');\r\n    }\r\n    if (node.noResize || this.opts.disableResize) {\r\n      GridStackDD.get().resizable(el, 'disable');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // remove our style that look like D&D\r\n  node.el.classList.remove('ui-draggable-disabled', 'ui-resizable-disabled');\r\n\r\n  // variables used/cashed between the 3 start/move/end methods, in addition to node passed above\r\n  let cellWidth: number;\r\n  let cellHeight: number;\r\n\r\n  /** called when item starts moving/resizing */\r\n  let onStartMoving = (event: Event, ui: DDUIData): void => {\r\n    let target = event.target as HTMLElement;\r\n\r\n    // trigger any 'dragstart' / 'resizestart' manually\r\n    if (this._gsEventHandler[event.type]) {\r\n      this._gsEventHandler[event.type](event, target);\r\n    }\r\n\r\n    this.engine.cleanNodes();\r\n    this.engine.beginUpdate(node);\r\n    cellWidth = this.cellWidth();\r\n    cellHeight = this.getCellHeight(true); // force pixels for calculations\r\n\r\n    this.placeholder.setAttribute('gs-x', target.getAttribute('gs-x'));\r\n    this.placeholder.setAttribute('gs-y', target.getAttribute('gs-y'));\r\n    this.placeholder.setAttribute('gs-w', target.getAttribute('gs-w'));\r\n    this.placeholder.setAttribute('gs-h', target.getAttribute('gs-h'));\r\n    this.el.append(this.placeholder);\r\n\r\n    node.el = this.placeholder;\r\n    node._beforeDragX = node.x;\r\n    node._beforeDragY = node.y;\r\n    node._prevYPix = ui.position.top;\r\n\r\n    GridStackDD.get().resizable(el, 'option', 'minWidth', cellWidth * (node.minW || 1));\r\n    GridStackDD.get().resizable(el, 'option', 'minHeight', cellHeight * (node.minH || 1));\r\n    // also set max if set #1330\r\n    if (node.maxW) {\r\n      GridStackDD.get().resizable(el, 'option', 'maxWidth', cellWidth * node.maxW);\r\n    }\r\n    if (node.maxH) {\r\n      GridStackDD.get().resizable(el, 'option', 'maxHeight', cellHeight * node.maxH);\r\n    }\r\n  }\r\n\r\n  /** called when item is being dragged/resized */\r\n  let dragOrResize = (event: Event, ui: DDUIData): void => {\r\n    let x = Math.round(ui.position.left / cellWidth);\r\n    let y = Math.floor((ui.position.top + cellHeight / 2) / cellHeight);\r\n    let w: number;\r\n    let h: number;\r\n\r\n    if (event.type === 'drag') {\r\n      let distance = ui.position.top - node._prevYPix;\r\n      node._prevYPix = ui.position.top;\r\n      Utils.updateScrollPosition(el, ui.position, distance);\r\n      // if inTrash, outside of the bounds or added to another grid (#393) temporarily remove it from us\r\n      if (el.dataset.inTrashZone || x < 0 || x >= this.engine.column || y < 0 || (!this.engine.float && y > this.engine.getRow()) || node._added) {\r\n        if (node._temporaryRemoved) return;\r\n        if (this.opts.removable === true) {\r\n          this._setupRemovingTimeout(el);\r\n        }\r\n\r\n        x = node._beforeDragX;\r\n        y = node._beforeDragY;\r\n\r\n        if (this.placeholder.parentNode === this.el) {\r\n          this.placeholder.remove();\r\n        }\r\n        this.engine.removeNode(node);\r\n        this._updateContainerHeight();\r\n\r\n        node._temporaryRemoved = true;\r\n        delete node._added; // no need for this now\r\n      } else {\r\n        this._clearRemovingTimeout(el);\r\n\r\n        if (node._temporaryRemoved) {\r\n          this.engine.addNode(node);\r\n          this._writeAttrs(this.placeholder, x, y, w, h);\r\n          this.el.appendChild(this.placeholder);\r\n          node.el = this.placeholder;\r\n          delete node._temporaryRemoved;\r\n        }\r\n      }\r\n      if (node._lastTriedX === x && node._lastTriedY === y) return;\r\n    } else if (event.type === 'resize')  {\r\n      if (x < 0) return;\r\n      w = Math.round(ui.size.width / cellWidth);\r\n      h = Math.round(ui.size.height / cellHeight);\r\n      if (w === node.w && h === node.h) return;\r\n    }\r\n\r\n    if (!this.engine.canMoveNode(node, x, y, w, h)) return;\r\n    node._lastTriedX = x;\r\n    node._lastTriedY = y;\r\n    node._lastTriedW = w;\r\n    node._lastTriedH = h;\r\n    this.engine.moveNode(node, x, y, w, h);\r\n    this._updateContainerHeight();\r\n  }\r\n\r\n  /** called when the item stops moving/resizing */\r\n  let onEndMoving = (event: Event): void => {\r\n    if (this.placeholder.parentNode === this.el) {\r\n      this.placeholder.remove();\r\n    }\r\n\r\n    // if the item has moved to another grid, we're done here\r\n    let target: GridItemHTMLElement = event.target as GridItemHTMLElement;\r\n    if (!target.gridstackNode || target.gridstackNode.grid !== this) return;\r\n\r\n    node.el = target;\r\n\r\n    if (node._isAboutToRemove) {\r\n      let gridToNotify = el.gridstackNode.grid;\r\n      if (gridToNotify._gsEventHandler[event.type]) {\r\n        gridToNotify._gsEventHandler[event.type](event, target);\r\n      }\r\n      gridToNotify.engine.removedNodes.push(node);\r\n      GridStackDD.get().remove(el);\r\n      delete el.gridstackNode; // hint we're removing it next and break circular link\r\n      gridToNotify._triggerRemoveEvent();\r\n      if (el.parentElement) {\r\n        el.remove(); // finally remove it\r\n      }\r\n    } else {\r\n      this._clearRemovingTimeout(el);\r\n      if (!node._temporaryRemoved) {\r\n        Utils.removePositioningStyles(target);\r\n        this._writeAttrs(target, node.x, node.y, node.w, node.h);\r\n      } else {\r\n        Utils.removePositioningStyles(target);\r\n        this._writeAttrs(target, node._beforeDragX, node._beforeDragY, node.w, node.h);\r\n        node.x = node._beforeDragX;\r\n        node.y = node._beforeDragY;\r\n        delete node._temporaryRemoved;\r\n        this.engine.addNode(node);\r\n      }\r\n      if (this._gsEventHandler[event.type]) {\r\n        this._gsEventHandler[event.type](event, target);\r\n      }\r\n    }\r\n\r\n    this._updateContainerHeight();\r\n    this._triggerChangeEvent();\r\n\r\n    this.engine.endUpdate();\r\n\r\n    // if we re-sized a nested grid item, let the children resize as well\r\n    if (event.type === 'resizestop') {\r\n      this._resizeNestedGrids(target);\r\n    }\r\n  }\r\n\r\n  GridStackDD.get()\r\n    .draggable(el, {\r\n      start: onStartMoving,\r\n      stop: onEndMoving,\r\n      drag: dragOrResize\r\n    })\r\n    .resizable(el, {\r\n      start: onStartMoving,\r\n      stop: onEndMoving,\r\n      resize: dragOrResize\r\n    });\r\n  node._initDD = true; // we've set DD support now\r\n\r\n  // finally fine tune drag vs move by disabling any part...\r\n  if (node.noMove || this.opts.disableDrag) {\r\n    GridStackDD.get().draggable(el, 'disable');\r\n  }\r\n  if (node.noResize || this.opts.disableResize) {\r\n    GridStackDD.get().resizable(el, 'disable');\r\n  }\r\n  return this;\r\n}\r\n\r\n/**\r\n * Enables/Disables moving.\r\n * @param els widget or selector to modify.\r\n * @param val if true widget will be draggable.\r\n */\r\nGridStack.prototype.movable = function(els: GridStackElement, val: boolean): GridStack {\r\n  if (this.opts.staticGrid) { return this; } // can't move a static grid!\r\n  GridStack.getElements(els).forEach(el => {\r\n    let node = el.gridstackNode;\r\n    if (!node || node.locked) { return }\r\n    node.noMove = !(val || false);\r\n    if (node.noMove) {\r\n      GridStackDD.get().draggable(el, 'disable');\r\n      el.classList.remove('ui-draggable-handle');\r\n    } else {\r\n      this._prepareDragDropByNode(node); // init DD if need be\r\n      GridStackDD.get().draggable(el, 'enable');\r\n      el.classList.remove('ui-draggable-handle');\r\n    }\r\n  });\r\n  return this;\r\n}\r\n\r\n/**\r\n * Enables/Disables resizing.\r\n * @param els  widget or selector to modify\r\n * @param val  if true widget will be resizable.\r\n */\r\nGridStack.prototype.resizable = function(els: GridStackElement, val: boolean): GridStack {\r\n  if (this.opts.staticGrid) { return this; } // can't resize a static grid!\r\n  GridStack.getElements(els).forEach(el => {\r\n    let node = el.gridstackNode;\r\n    if (!node || node.locked) { return; }\r\n    node.noResize = !(val || false);\r\n    if (node.noResize) {\r\n      GridStackDD.get().resizable(el, 'disable');\r\n    } else {\r\n      this._prepareDragDropByNode(node); // init DD if need be\r\n      GridStackDD.get().resizable(el, 'enable');\r\n    }\r\n  });\r\n  return this;\r\n}\r\n"]}