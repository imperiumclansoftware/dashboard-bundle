{"version":3,"file":"dd-base-impl.js","sourceRoot":"","sources":["../../src/h5/dd-base-impl.ts"],"names":[],"mappings":";AAAA,kCAAkC;;AAQlC,MAAsB,eAAe;IAArC;QAIE,gBAAgB;QACR,cAAS,GAAG,KAAK,CAAC;QAC1B,gBAAgB;QACR,mBAAc,GAElB,EAAE,CAAC;IA6BT,CAAC;IArCC,mHAAmH;IACnH,IAAW,QAAQ,KAAgB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IASpD,EAAE,CAAC,KAAa,EAAE,QAAuB;QAC9C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;IACxC,CAAC;IAEM,GAAG,CAAC,KAAa;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEM,YAAY,CAAC,SAAiB,EAAE,KAAY;QACjD,IAAI,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO;SAAE;QAC9B,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAAC,OAAO;SAAE,CAAC,6CAA6C;QAClF,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;YAClC,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9C;IACH,CAAC;CACF;AAtCD,0CAsCC","sourcesContent":["// dd-base-impl.ts 3.1.2 @preserve\n\n/**\n * https://gridstackjs.com/\n * (c) 2020 rhlin, Alain Dumesny\n * gridstack.js may be freely distributed under the MIT license.\n*/\nexport type EventCallback = (event: Event) => boolean|void;\nexport abstract class DDBaseImplement {\n  /** returns the enable state, but you have to call enable()/disable() to change (as other things need to happen) */\n  public get disabled(): boolean   { return this._disabled; }\n\n  /** @internal */\n  private _disabled = false;\n  /** @internal */\n  private _eventRegister: {\n    [eventName: string]: EventCallback;\n  } = {};\n\n  public on(event: string, callback: EventCallback): void {\n    this._eventRegister[event] = callback;\n  }\n\n  public off(event: string): void {\n    delete this._eventRegister[event];\n  }\n\n  public enable(): void {\n    this._disabled = false;\n  }\n\n  public disable(): void {\n    this._disabled = true;\n  }\n\n  public destroy(): void {\n    delete this._eventRegister;\n  }\n\n  public triggerEvent(eventName: string, event: Event): boolean|void {\n    if (this.disabled) { return; }\n    if (!this._eventRegister) {return; } // used when destroy before triggerEvent fire\n    if (this._eventRegister[eventName]) {\n      return this._eventRegister[eventName](event);\n    }\n  }\n}\n\nexport interface HTMLElementExtendOpt<T> {\n  el: HTMLElement;\n  option: T;\n  updateOption(T): DDBaseImplement;\n}\n"]}